loadingmap <- ggbiplot(pr.out.nonsd, circle = TRUE)
library(ggbiplot)
loadingmap <- ggbiplot(pr.out.nonsd, circle = TRUE)
loadingmap +
ggtitle("First Two PCs Loading Maps") +
theme(plot.title = element_text(lineheight=1, face="bold"))
?xlab
loadingmap <- ggbiplot(pr.out.nonsd, circle = TRUE)
loadingmap +
ggtitle("First Two PCs Loading Maps") +
theme(plot.title = element_text(lineheight=1, face="bold"))
pc1series <- ggplot(data.frame(pc1 = pr.out.nonsd$x[, 1]), aes(x = 1:399, y = pc1))
pc1series <- pc1series + geom_line() +
xlab("Month") +
ylab("PC1 Scores") +
ggtitle("First Component Time Series") +
theme(plot.title = element_text(lineheight=1, face="bold"))
pc2series <- ggplot(data.frame(pc2 = pr.out.nonsd$x[, 2]), aes(x = 1:399, y = pc2))
pc1series <- pc2series + geom_line() +
xlab("Month") +
ylab("PC2 Scores") +
ggtitle("Second Component Time Series") +
theme(plot.title = element_text(lineheight=1, face="bold"))
multiplot(p1, p2, cols=1)
multiplot(pc1series, pc2series, cols=1)
pc2series <- pc2series + geom_line() +
xlab("Month") +
ylab("PC2 Scores") +
ggtitle("Second Component Time Series") +
theme(plot.title = element_text(lineheight=1, face="bold"))
multiplot(pc1series, pc2series, cols=1)
pc1series <- ggplot(data.frame(pc1 = pr.out.nonsd$x[, 1]), aes(x = 1:399, y = pc1))
pc1series <- pc1series + geom_line() +
xlab("Month") +
ylab("PC1 Scores") +
ggtitle("First Component Time Series") +
theme(plot.title = element_text(lineheight=1, face="bold"))
pc2series <- ggplot(data.frame(pc2 = pr.out.nonsd$x[, 2]), aes(x = 1:399, y = pc2))
pc2series <- pc2series + geom_line() +
xlab("Month") +
ylab("PC2 Scores") +
ggtitle("Second Component Time Series") +
theme(plot.title = element_text(lineheight=1, face="bold"))
multiplot(pc1series, pc2series, cols=1)
multiplot(p1, p2, cols=1)
temps <- data.frame(ave = apply(ssts, 1, mean),
sd = apply(ssts, 1, sd))
p1 <- ggplot(data = locs[keep, ],
aes(x = lon, y = lat, color = temps$ave[keep]))
p1 <- p1 + geom_point() +
scale_colour_gradient(name = "Mean Temp.",
low = "darkblue",
high = "yellow") +
ylab("Latitude") +
xlab("Longitude") +
ggtitle("Mean SST from Different Location") +
theme(plot.title = element_text(lineheight=1, face="bold"))
p2 <- ggplot(data = locs[keep, ],
aes(x = lon, y = lat, color = temps$sd[keep]))
p2 <- p2 +
geom_point() +
scale_colour_gradient(name = "Std. Dev.",
low = "darkblue",
high = "yellow") +
ylab("Latitude") +
xlab("Longitude") +
ggtitle("Standard Deviation of SST from Different Locations") +
theme(plot.title = element_text(lineheight=1, face="bold"))
multiplot(p1, p2, cols=1)
?kmneas
?kmeans
Z <- pr.out.nonsd$x[, 1:4]
km.out=kmeans(Z , 2, nstart=20)
km.out$cluster
km.out=kmeans(Z , 3, nstart=20)
km.out$cluster
ind
indexes
rownames(indexes) <- cnames
indexes
km.out$cluster
library(ggfortify)
autoplot(pr.out.nonsd, data = pr.input)
autoplot(pr.out.nonsd, data = pr.input, colour = km.out$cluster)
pr.input.2 <- cbind(pr.input, type = km.out$cluster)
autoplot(pr.out.nonsd, data = pr.input.2, colour = "type")
pr.input.2 <- cbind(pr.input, type = as.factor(km.out$cluster))
pr.input.2$type
pr.input.2 <- data.frame(pr.input, type = as.factor(km.out$cluster))
pr.input.2$type
autoplot(pr.out.nonsd, data = pr.input.2, colour = "type")
?autoplot
?"ggfortify-package"
autoplot(kmeans(Z , 3, nstart=20), data = Z)
tt <- autoplot(kmeans(Z , 3, nstart=20), data = Z)
class(tt)
tt <- cbind(Z, indexes)
str(tt)
tt <- data(Z, class = as.factor(indexes))
tt <- data(Z, class = as.factor(indexes[, 1]))
indexes[, 1]
tt <- data(Z, class = factor(indexes))
tt <- data(Z, class = factor(indexes[, 1]))
Z <- pr.out.nonsd$x[, 1:4]
tt <- data(Z, class = factor(indexes[, 1]))
tt <- data.frame(Z, class = factor(indexes[, 1]))
str(tt)
cl.plot + geom_point()
cl.plot <- ggplot(data = data.frame(Z, class = factor(indexes[, 1])),
aes(x = PC1, y = PC2, colour = class))
cl.plot + geom_point()
multiplot(km.plot, cl.plot, cols=2)
km.plot <- autoplot(kmeans(Z , 3, nstart=20), data = Z)
cl.plot <- ggplot(data = data.frame(Z, class = factor(indexes[, 1])),
aes(x = PC1, y = PC2, colour = class))
cl.plot <- cl.plot + geom_point()
multiplot(km.plot, cl.plot, cols=2)
km.plot <- autoplot(kmeans(Z , 3, nstart=20), data = Z)
cl.plot <- ggplot(data = data.frame(Z, class = factor(indexes[, 1])),
aes(x = PC1, y = PC2, colour = class))
cl.plot <- cl.plot + geom_point()
multiplot(km.plot, cl.plot, cols=1)
library(caret)
class(km.out$cluster
)
confusionMatrix(km.out$cluster, factor(indexes[, 1]))
confusionMatrix(as.factor(km.out$cluster), factor(indexes[, 1]))
confusionMatrix(factor(km.out$cluster), factor(indexes[, 1]))
factor(km.out$cluster)
factor(indexes[, 1])
confusionMatrix(factor(km.out$cluster), factor(indexes[, 1]+2))
confusionMatrix(factor(km.out$cluster), t = factor(indexes[, 1]+2))
confusionMatrix(p= factor(km.out$cluster), t = factor(indexes[, 1]+2))
confusionMatrix
?confusionMatrix
confusionMatrix(factor(km.out$cluster), factor(indexes[, 1]+2))
factor(indexes[, 1])
factor(km.out$cluster)
confusionMatrix(factor(km.out$cluster), factor(indexes[, 1]+2))
factor(indexes[, 1]+2)
confusionMatrix(factor(km.out$cluster), factor(-indexes[, 1]+2))
confusionMatrix(factor(km.out$cluster), factor(indexes[, 1]+2))
sum((km.out$cluster==2) & (indexes[, 1]==0))
sum((km.out$cluster==2) & (indexes[, 1]==1))
sum((km.out$cluster==2) & (indexes[, 1]==-1))
Z[(km.out$cluster==2) & (indexes[, 1]==-1), 1]
Z[(km.out$cluster==2) & (indexes[, 1]==0), 1]
factor(indexes[, 1])
Z[(km.out$cluster==2) & (indexes[, 1]==0), 1:2]
max(Z[(km.out$cluster==3) & (indexes[, 1]==0), 2])
max(Z[(km.out$cluster==3), 2])
max(Z[(km.out$cluster==2), 2])
Z <- pr.out.nonsd$x[, 1:4]
km.out=kmeans(Z , 3, nstart=20)
km.plot <- ggplot(data = data.frame(Z, class = factor(km.out$cluster)),
aes(x = PC1, y = PC2, colour = class))
km.plot <- km.plot + geom_point()
cl.plot <- ggplot(data = data.frame(Z, class = factor(indexes[, 1])),
aes(x = PC1, y = PC2, colour = class))
cl.plot <- cl.plot + geom_point()
multiplot(km.plot, cl.plot, cols=1)
factor(km.out$cluster)
km.plot <- ggplot(data = data.frame(Z, class = km.out$cluster),
aes(x = PC1, y = PC2, colour = class))
km.plot <- km.plot + geom_point()
cl.plot <- ggplot(data = data.frame(Z, class = factor(indexes[, 1])),
aes(x = PC1, y = PC2, colour = class))
cl.plot <- cl.plot + geom_point()
multiplot(km.plot, cl.plot, cols=1)
km.out$cluster
km.out=kmeans(Z , 3, nstart=20)
km.out$cluster
confusionMatrix(factor(km.out$cluster), factor(indexes[, 1]+2))
max(Z[(km.out$cluster==3), 2])
Z[(km.out$cluster==2) & (indexes[, 1]==0), 1:2]
str( km.out$cluster)
Z <- pr.out.nonsd$x[, 1:4]
km.out=kmeans(Z , 3, nstart=20)
km.plot <- ggplot(data = data.frame(Z, class = factor(km.out$cluster)),
aes(x = PC1, y = PC2, colour = class))
km.plot <- km.plot + geom_point()
cl.plot <- ggplot(data = data.frame(Z, class = factor(indexes[, 1])),
aes(x = PC1, y = PC2, colour = class))
cl.plot <- cl.plot + geom_point()
multiplot(km.plot, cl.plot, cols=1)
prediction <- km.out$cluster
prediction[km.out$cluster == 2] <- 3
prediction[km.out$cluster == 3] <- 2
confusionMatrix(factor(prediction), factor(indexes[, 1]+2))
confusionMatrix(prediction, indexes[, 1]+2)
prediction <- km.out$cluster
confusionMatrix(prediction, indexes[, 1]+2)
set.seed(1)
Z <- pr.out.nonsd$x[, 1:4]
km.out=kmeans(Z , 3, nstart=20)
km.plot <- ggplot(data = data.frame(Z, class = factor(km.out$cluster)),
aes(x = PC1, y = PC2, colour = class))
km.plot <- km.plot + geom_point()
cl.plot <- ggplot(data = data.frame(Z, class = factor(indexes[, 1])),
aes(x = PC1, y = PC2, colour = class))
cl.plot <- cl.plot + geom_point()
multiplot(km.plot, cl.plot, cols=1)
prediction <- km.out$cluster
confusionMatrix(prediction, indexes[, 1]+2)
set.seed(2)
Z <- pr.out.nonsd$x[, 1:4]
km.out=kmeans(Z , 3, nstart=20)
km.plot <- ggplot(data = data.frame(Z, class = factor(km.out$cluster)),
aes(x = PC1, y = PC2, colour = class))
km.plot <- km.plot + geom_point()
cl.plot <- ggplot(data = data.frame(Z, class = factor(indexes[, 1])),
aes(x = PC1, y = PC2, colour = class))
cl.plot <- cl.plot + geom_point()
multiplot(km.plot, cl.plot, cols=1)
prediction <- km.out$cluster
confusionMatrix(prediction, indexes[, 1]+2)
set.seed(3)
Z <- pr.out.nonsd$x[, 1:4]
km.out=kmeans(Z , 3, nstart=20)
km.plot <- ggplot(data = data.frame(Z, class = factor(km.out$cluster)),
aes(x = PC1, y = PC2, colour = class))
km.plot <- km.plot + geom_point()
cl.plot <- ggplot(data = data.frame(Z, class = factor(indexes[, 1])),
aes(x = PC1, y = PC2, colour = class))
cl.plot <- cl.plot + geom_point()
multiplot(km.plot, cl.plot, cols=1)
prediction <- km.out$cluster
confusionMatrix(prediction, indexes[, 1]+2)
set.seed(3)
Z <- pr.out.nonsd$x[, 1:4]
km.out=kmeans(Z , 3, nstart=20)
km.plot <- ggplot(data = data.frame(Z, class = factor(km.out$cluster)),
aes(x = PC1, y = PC2, colour = class))
km.plot <- km.plot + geom_point()
cl.plot <- ggplot(data = data.frame(Z, class = factor(indexes[, 1])),
aes(x = PC1, y = PC2, colour = class))
cl.plot <- cl.plot + geom_point()
multiplot(km.plot, cl.plot, cols=1)
confusionMatrix(km.out$cluster, indexes[, 1]+2)
hc.complete=hclust(dist(Z), method="complete")
hc.complete$labels
hc.average <- hclust(dist(Z), method="average")
hc.complete <- hclust(dist(Z), method="complete")
par(mfrow=c(1,2))
plot(hc.average, main="Average Linkage", xlab="", sub="",
cex =.9)
plot(hc.complete, main="Complete Linkage", xlab="", sub="",
cex =.9)
hc.average <- hclust(dist(Z), method="average")
hc.complete <- hclust(dist(Z), method="complete")
hc.average.cluster <- cutree(hc.average, 3)
hc.complete.cluster <- cutree(hc.complete, 3)
confusionMatrix(hc.average.cluster, indexes[, 1]+2)
set.seed(1)
hc.average <- hclust(dist(Z), method="average")
hc.average.cluster <- cutree(hc.average, 3)
confusionMatrix(hc.average.cluster, indexes[, 1]+2)
set.seed(2)
hc.average <- hclust(dist(Z), method="average")
hc.average.cluster <- cutree(hc.average, 3)
confusionMatrix(hc.average.cluster, indexes[, 1]+2)
set.seed(3)
hc.average <- hclust(dist(Z), method="average")
hc.average.cluster <- cutree(hc.average, 3)
confusionMatrix(hc.average.cluster, indexes[, 1]+2)
set.seed(4)
hc.average <- hclust(dist(Z), method="average")
hc.average.cluster <- cutree(hc.average, 3)
confusionMatrix(hc.average.cluster, indexes[, 1]+2)
set.seed(13)
hc.average <- hclust(dist(Z), method="average")
hc.average.cluster <- cutree(hc.average, 3)
confusionMatrix(hc.average.cluster, indexes[, 1]+2)
confusionMatrix(km.out$cluster, indexes[, 1]+2)
confusionMatrix(hc.average.cluster, indexes[, 1]+2)
hc.average.cluster
library(ISLR)
nci.labs=NCI60$labs
nci.data=NCI60$data
dim(nci.data)
nci.labs[1:4]
pr.out=prcomp(nci.data, scale=TRUE)
Cols=function(vec){    cols=rainbow(length(unique(vec)))    return(cols[as.numeric(as.factor(vec))]) +}
Cols=function(vec){
cols=rainbow(length(unique(vec)))
return(cols[as.numeric(as.factor(vec))])}
plot(pr.out$x[,1:2], col=Cols(nci.labs), pch=19,     xlab="Z1",ylab="Z2")
plot(pr.out$x[,1:2], col=Cols(nci.labs), pch=19,xlab="Z1",ylab="Z2")
plot(pr.out$x[,c(1,3)], col=Cols(nci.labs), pch=19,xlab="Z1",ylab="Z3")
?cuttree
?cutree
?hc.average.cluster
hc.average <- hclust(dist(Z), method="average")
hc.complete <- hclust(dist(Z), method="complete")
hc.average.cluster <- cutree(hc.average, 3)
str(hc.average.cluster)
c(1, 3)[c(1,2,2,2,3)]
c(1, 3)[c(1,2,2,2,1)]
hc.average <- hclust(dist(Z), method="average")
hc.complete <- hclust(dist(Z), method="complete")
hc.average.cluster <- c(2, 1, 3)[cutree(hc.average, 3)]
hc.complete.cluster <- cutree(hc.complete, 3)
confusionMatrix(hc.average.cluster, indexes[, 1]+2)
hc.average <- hclust(dist(Z), method="average")
hc.complete <- hclust(dist(Z), method="complete")
hc.average.cluster <- c(2, 1, 3)[cutree(hc.average, 3)]
hc.complete.cluster <- c(2, 1, 3)[cutree(hc.complete, 3)]
confusionMatrix(hc.average.cluster, indexes[, 1]+2)
confusionMatrix(hc.complete.cluster, indexes[, 1]+2)
library(kernlab)
kpca.out.1 <- kpca( ~ ., data = pr.input, kpar = list(sigma = 0.1))
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = 0.1))
kpca.out.1$rotated
str(kpca.out.1)
kpca.out.1@rotated
str(kpca.out.1)
dim(kpca.out.1@rotated)
dim(kpca.out.1@rotated[, 1:2])
data.frame(kpca.out.1@rotated[, 1:2])
tt + geom_point()
tt <- ggplot(data = data.frame(kpca.out.1@rotated[, 1:2]),
aes(x = X1, y = X2))
tt + geom_point()
kpca.out.1@rotated[, 1]
kpca.out.1@rotated[, 2]
range(kpca.out.1@rotated[, 2])
range(kpca.out.1@rotated[, 1])
sum(kpca.out.1@rotated[, 1]>10)
sum(kpca.out.1@rotated[, 2]>10)
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = 10))
kpca.out.1@rotated[, 2]
kpca.out.1@eig
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = 0.01))
kpca.out.1@eig
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = 0.0001))
kpca.out.1@eig
tt <- ggplot(data = data.frame(kpca.out.1@rotated[, 1:2]),
aes(x = X1, y = X2))
tt + geom_point()
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = 0.000001))
tt <- ggplot(data = data.frame(kpca.out.1@rotated[, 1:2]),
aes(x = X1, y = X2))
tt + geom_point()
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = 0.001))
tt <- ggplot(data = data.frame(kpca.out.1@rotated[, 1:2]),
aes(x = X1, y = X2))
tt + geom_point()
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = 0.01))
tt <- ggplot(data = data.frame(kpca.out.1@rotated[, 1:2]),
aes(x = X1, y = X2))
tt + geom_point()
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = 0.005))
tt <- ggplot(data = data.frame(kpca.out.1@rotated[, 1:2]),
aes(x = X1, y = X2))
tt + geom_point()
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = 0.007))
tt <- ggplot(data = data.frame(kpca.out.1@rotated[, 1:2]),
aes(x = X1, y = X2))
tt + geom_point()
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = 2))
tt <- ggplot(data = data.frame(kpca.out.1@rotated[, 1:2]),
aes(x = X1, y = X2))
tt + geom_point()
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = 10))
tt <- ggplot(data = data.frame(kpca.out.1@rotated[, 1:2]),
aes(x = X1, y = X2))
tt + geom_point()
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = .05))
tt <- ggplot(data = data.frame(kpca.out.1@rotated[, 1:2]),
aes(x = X1, y = X2))
tt + geom_point()
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = .005))
tt <- ggplot(data = data.frame(kpca.out.1@rotated[, 1:2]),
aes(x = X1, y = X2))
tt + geom_point()
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = .005))
tt <- ggplot(data = data.frame(kpca.out.1@rotated[, 1:2]),
aes(x = X1, y = X2))
tt + geom_point()
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = .0005))
tt <- ggplot(data = data.frame(kpca.out.1@rotated[, 1:2]),
aes(x = X1, y = X2))
tt + geom_point()
plot(kpca.p1)
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = .0005))
kpca.p1 <- ggplot(data = data.frame(kpca.out.1@rotated[, 1:2],
class = factor(indexes[, 1])),
aes(x = X1, y = X2, colour = class))
plot(kpca.p1)
kpca.out.1 <- kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = .0005))
kpca.p1 <- ggplot(data = data.frame(kpca.out.1@rotated[, 1:2],
class = factor(indexes[, 1])),
aes(x = X1, y = X2, colour = class)) + geom_point()
plot(kpca.p1)
sigma.grid <- c(0.01, 0.005, 0.001, 0.00001)
sigma.grid <- c(0.01, 0.005, 0.001, 0.00001)
sigma.grid <- c(0.01, 0.005, 0.001, 0.00001)
kpca.out <- c()
kpca.out <- c(kpca.out, kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = sigma.grid[1])))
kpca.out <- c(kpca.out, kpca( ~ ., data = data.frame(pr.input), kpar = list(sigma = sigma.grid[1])))
str(kpca.out)
class(kpca.out[[1]])
kpca.out[[1]]
str(kpca.out[[1]])
sigma.grid <- c(0.01, 0.005, 0.001, 0.00001)
kpca.out <- c()
kpca.p <- c()
for (i in 1:length(sigma.grid)){
kpca.out <- c(kpca.out, kpca( ~ ., data = data.frame(pr.input),
kpar = list(sigma = sigma.grid[i])))
kpca.p <- c(kpca.p, ggplot(data = data.frame(kpca.out[[i]]@rotated[, 1:2],
class = factor(indexes[, 1])),
aes(x = X1, y = X2, colour = class)) +
geom_point())
}
multiplot(plotlist = kpca.p, cols = 2)
multiplot(kpca.p[[1]], kpca.p[[2]],
kpca.p[[3]], kpca.p[[4]],
cols = 2)
tt
tt+geom_point()
class(tt+geom_point())
str(tt+geom_point())
sigma.grid <- c(0.01, 0.005, 0.001, 0.00001)
kpca.out <- c()
kpca.p <- list()
for (i in 1:length(sigma.grid)){
kpca.out <- c(kpca.out, kpca( ~ ., data = data.frame(pr.input),
kpar = list(sigma = sigma.grid[i])))
kpca.p <- list(kpca.p, ggplot(data = data.frame(kpca.out[[i]]@rotated[, 1:2],
class = factor(indexes[, 1])),
aes(x = X1, y = X2, colour = class)) +
geom_point())
}
str(kpca.p)
sigma.grid <- c(0.01, 0.005, 0.001, 0.00001)
kpca.out <- c()
kpca.p <- list()
for (i in 1:length(sigma.grid)){
kpca.out <- c(kpca.out, kpca( ~ ., data = data.frame(pr.input),
kpar = list(sigma = sigma.grid[i])))
kpca.p[[i]] <- ggplot(data = data.frame(kpca.out[[i]]@rotated[, 1:2],
class = factor(indexes[, 1])),
aes(x = X1, y = X2, colour = class)) +
geom_point()
}
str(kpca.p)
multiplot(kpca.p[[1]], kpca.p[[2]],
kpca.p[[3]], kpca.p[[4]],
cols = 2)
sapply(ssts, mean)
t(ssts[1:2, ])
data.frame(t(ssts[1:2, ]))
tt <- ggplot(data = data.frame(t(ssts[1:2, ]),class = factor(indexes[, 1])), aes(x = X1, y = X2, colour = class))+geom_point()
tt
tt <- ggplot(data = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1])), aes(x = X1, y = X2, colour = class))+geom_point()
tt
data.frame(t(ssts[sample(1:nrow(ssts), 2), ]))
tt <- ggplot(data = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1])), aes(x = 1, y = 2, colour = class))+geom_point()
tt
tt <- ggplot(data = (temp = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1]))), aes(x = names(temp)[1], y = names(temp)[2], colour = class))+geom_point()
tt
tt <- ggplot(data = (temp = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1]))), aes(x = temp[, 1], y = temp[,2], colour = class))+geom_point()
tt
tt
ggplot(data = (temp = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1]))), aes(x = temp[, 1], y = temp[,2], colour = class))+geom_point()
ggplot(data = (temp = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1]))), aes(x = temp[, 1], y = temp[,2], colour = class))+geom_point()
ggplot(data = (temp = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1]))), aes(x = temp[, 1], y = temp[,2], colour = class))+geom_point()
ggplot(data = (temp = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1]))), aes(x = temp[, 1], y = temp[,2], colour = class))+geom_point()
ggplot(data = (temp = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1]))), aes(x = temp[, 1], y = temp[,2], colour = class))+geom_point()
ggplot(data = (temp = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1]))), aes(x = temp[, 1], y = temp[,2], colour = class))+geom_point()
ggplot(data = (temp = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1]))), aes(x = temp[, 1], y = temp[,2], colour = class))+geom_point()+xlab(names(temp)[1])+ylab(names(temp)[2])
ggplot(data = (temp = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1]))), aes(x = temp[, 1], y = temp[,2], colour = class))+geom_point()+xlab(names(temp)[1])+ylab(names(temp)[2])
ggplot(data = (temp = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1]))), aes(x = temp[, 1], y = temp[,2], colour = class))+geom_point()+xlab(names(temp)[1])+ylab(names(temp)[2])
ggplot(data = (temp = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1]))), aes(x = temp[, 1], y = temp[,2], colour = class))+geom_point()+xlab(names(temp)[1])+ylab(names(temp)[2])
ggplot(data = (temp = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1]))), aes(x = temp[, 1], y = temp[,2], colour = class))+geom_point()+xlab(names(temp)[1])+ylab(names(temp)[2])
multiplot(plotlist = kpca.p,
cols = 2)
loadingmap <- ggbiplot(pr.out.nonsd, circle = TRUE)
loadingmap <- loadingmap +
ggtitle("First Two PCs Loading Maps") +
theme(plot.title = element_text(lineheight=1, face="bold"))
pc1series <- ggplot(data.frame(pc1 = pr.out.nonsd$x[, 1]), aes(x = 1:399, y = pc1))
pc1series <- pc1series + geom_line() +
xlab("Month") +
ylab("PC1 Scores") +
ggtitle("First Component Time Series") +
theme(plot.title = element_text(lineheight=1, face="bold"))
pc2series <- ggplot(data.frame(pc2 = pr.out.nonsd$x[, 2]), aes(x = 1:399, y = pc2))
pc2series <- pc2series + geom_line() +
xlab("Month") +
ylab("PC2 Scores") +
ggtitle("Second Component Time Series") +
theme(plot.title = element_text(lineheight=1, face="bold"))
multiplot(loadingmap, pc1series, pc2series,
layout = matrix(c(1,1,2,3), nrow=2, byrow=TRUE))
kpca.out <- c()
kpca.p <- list()
for (i in 1:length(sigma.grid)){
kpca.out <- c(kpca.out, kpca( ~ ., data = data.frame(pr.input),
kpar = list(sigma = sigma.grid[i])))
kpca.p[[i]] <- ggplot(data = data.frame(kpca.out[[i]]@rotated[, 1:2],
class = factor(indexes[, 1])),
aes(x = X1, y = X2, colour = class)) +
geom_point()
}
multiplot(plotlist = kpca.p, cols = 2)
ggplot(data = (temp = data.frame(t(ssts[sample(1:nrow(ssts), 2), ]),class = factor(indexes[, 1]))), aes(x = temp[, 1], y = temp[,2], colour = class))+geom_point()+xlab(names(temp)[1])+ylab(names(temp)[2])
kpca.out
str(kpca.out)
kpca.out[[1]]@rotated
?reshape
