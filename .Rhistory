data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
plsr.fit <- plsr(Apps ~ .,
data = College.train,
scale = TRUE,
validation = "CV")
validationplot(plsr.fit,
val.type = "MSEP")
set.seed(1)
set.seed(1)
str(Boston)
data(Boston)
attach(Boston)
library(MASS)
data(Boston)
str(Boston)
train(nrow(Boston), nrow(Boston)/2)
train <- sample(nrow(Boston), nrow(Boston)/2)
train
lm.fit_2 <- lm(crim ~ .,
data = Boston,
subset = train)
?predict.lm()
lm.pred_2 <- predict(object = lm,
newdata = Boston[-train, -crim])
lm.pred_2 <- predict(object = lm.fit_2,
newdata = Boston[-train, -crim])
lm.pred_2 <- predict(object = lm.fit_2,
newdata = Boston[-train, -"crim"])
?subset
lm.pred_2 <- predict(object = lm.fit_2,
newdata = subset(Boston,
subset = -train,
select = -crim))
lm.pred_2 <- predict(object = lm.fit_2,
newdata = subset(Boston, select = -crim)[train,])
lm.pred_2
mean((lm.pred_2 - Boston$crim[-train, ]))
dim(lm.pred_2)
length(lm.pred_2)
Boston$crim[-train, ]
mean((lm.pred_2 - Boston$crim[-train])^2)
# (c)
train.Boston <- Boston[train, ]
set.seed(1)
train <- sample(nrow(Boston), nrow(Boston)/2)
train.Boston <- Boston[train, ]
test.Boston <- Boston[-test, ]
# (b)
lm.fit_2 <- lm(crim ~ .,
data = train.Boston)
lm.pred_2 <- predict(object = lm.fit_2,
set.seed(1)
train <- sample(nrow(Boston), nrow(Boston)/2)
train.Boston <- Boston[train, ]
test.Boston <- Boston[-train, ]
# (b)
lm.fit_2 <- lm(crim ~ .,
data = train.Boston)
lm.pred_2 <- predict(object = lm.fit_2,
newdata = subset(test.Boston, select = -crim))
mean((lm.pred_2 - test.Boston$crim)^2)
set.seed(1)
train <- sample(nrow(Boston), nrow(Boston)/2)
train.Boston <- Boston[train, ]
test.Boston <- Boston[-train, ]
# (b)
lm.fit_2 <- lm(crim ~ .,
data = train.Boston)
lm.pred_2 <- predict(object = lm.fit_2,
newdata = subset(test.Boston, select = -crim))
mean((lm.pred_2 - test.Boston$crim)^2)
?all_labels
all_labels()
all_labels()
?all_labels
library(knitr)
